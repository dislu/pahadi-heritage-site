{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiAr189\\\\Downloads\\\\pahadi-heritage-site\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentLanguage, setCurrentLanguage] = useState('hi'); // Default to Hindi\n\n  // Load saved language preference from localStorage\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('pahadiLanguage');\n    if (savedLanguage && (savedLanguage === 'hi' || savedLanguage === 'en')) {\n      setCurrentLanguage(savedLanguage);\n    }\n  }, []);\n\n  // Save language preference to localStorage\n  const changeLanguage = language => {\n    setCurrentLanguage(language);\n    localStorage.setItem('pahadiLanguage', language);\n\n    // Update document direction and language attributes\n    document.documentElement.lang = language;\n    if (language === 'hi') {\n      document.documentElement.dir = 'ltr'; // Hindi is left-to-right\n    }\n  };\n  const isHindi = currentLanguage === 'hi';\n  const isEnglish = currentLanguage === 'en';\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      currentLanguage,\n      changeLanguage,\n      isHindi,\n      isEnglish\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"OAmaZgGFUgs9GpGvR3lIkQX6gx4=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","currentLanguage","setCurrentLanguage","savedLanguage","localStorage","getItem","changeLanguage","language","setItem","document","documentElement","lang","dir","isHindi","isEnglish","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SiAr189/Downloads/pahadi-heritage-site/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [currentLanguage, setCurrentLanguage] = useState('hi'); // Default to Hindi\r\n\r\n  // Load saved language preference from localStorage\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem('pahadiLanguage');\r\n    if (savedLanguage && (savedLanguage === 'hi' || savedLanguage === 'en')) {\r\n      setCurrentLanguage(savedLanguage);\r\n    }\r\n  }, []);\r\n\r\n  // Save language preference to localStorage\r\n  const changeLanguage = (language) => {\r\n    setCurrentLanguage(language);\r\n    localStorage.setItem('pahadiLanguage', language);\r\n    \r\n    // Update document direction and language attributes\r\n    document.documentElement.lang = language;\r\n    if (language === 'hi') {\r\n      document.documentElement.dir = 'ltr'; // Hindi is left-to-right\r\n    }\r\n  };\r\n\r\n  const isHindi = currentLanguage === 'hi';\r\n  const isEnglish = currentLanguage === 'en';\r\n\r\n  return (\r\n    <LanguageContext.Provider \r\n      value={{ \r\n        currentLanguage, \r\n        changeLanguage, \r\n        isHindi, \r\n        isEnglish \r\n      }}\r\n    >\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC5D,IAAIF,aAAa,KAAKA,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,IAAI,CAAC,EAAE;MACvED,kBAAkB,CAACC,aAAa,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,cAAc,GAAIC,QAAQ,IAAK;IACnCL,kBAAkB,CAACK,QAAQ,CAAC;IAC5BH,YAAY,CAACI,OAAO,CAAC,gBAAgB,EAAED,QAAQ,CAAC;;IAEhD;IACAE,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAGJ,QAAQ;IACxC,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACrBE,QAAQ,CAACC,eAAe,CAACE,GAAG,GAAG,KAAK,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,OAAO,GAAGZ,eAAe,KAAK,IAAI;EACxC,MAAMa,SAAS,GAAGb,eAAe,KAAK,IAAI;EAE1C,oBACET,OAAA,CAACC,eAAe,CAACsB,QAAQ;IACvBC,KAAK,EAAE;MACLf,eAAe;MACfK,cAAc;MACdO,OAAO;MACPC;IACF,CAAE;IAAAf,QAAA,EAEDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACpB,GAAA,CAtCWF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}